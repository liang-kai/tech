(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{215:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js-的语法和数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-的语法和数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" JS 的语法和数据类型")]),t._v(" "),a("p",[t._v("网状、相互有联系的知识点，才更容易被存取，也叫知识。短时的认知和之前联系不起来，很容易丢进时间黑洞。")]),t._v(" "),a("p",[t._v("而最基本的知识网络节点如果错了，举步维艰。对了，事半功倍。")]),t._v(" "),a("p",[t._v("近期看 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Introduction",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN 上 Javascript 的英文介绍"),a("OutboundLink")],1),t._v("，发现和之前理解的确实有不同的地方，是原意，翻译出来的毕竟还是有误差，就怕失之毫厘谬以千里。")]),t._v(" "),a("h2",{attrs:{id:"语言规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语言规范","aria-hidden":"true"}},[t._v("#")]),t._v(" 语言规范")]),t._v(" "),a("p",[t._v("这门语言是 "),a("a",{attrs:{href:"http://www.ecma-international.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ECMA international"),a("OutboundLink")],1),t._v(" (European Computer Manufacturers Association) 组织定义的一套标准。"),a("br"),t._v("\nECMAScript 标准被定义在 ECMA-262 的文档里。这里的 262 不是2015版本，包括了最新的特性，也是这个文档内，"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Archive/Web/JavaScript/New_in_JavaScript",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于ECMAScript版本"),a("OutboundLink")],1),t._v("，不要误解为ES6、ES7就属于别的文档了。"),a("br"),t._v("\n同时，这个标准 ECMA-262 也是被国际标准组织"),a("a",{attrs:{href:"https://www.iso.org/home.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ISO"),a("OutboundLink")],1),t._v("所支持，又名为 ISO-16262。"),a("br"),t._v("\n其他规范："),a("br"),t._v("\n文档对象模型 DOM 是被 "),a("a",{attrs:{href:"http://www.w3.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("World Wide Web Consortinum"),a("OutboundLink")],1),t._v(" 和 "),a("a",{attrs:{href:"https://whatwg.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("WHATWG Web HyperText Application Technology Working Grounp"),a("OutboundLink")],1),t._v(" 规范定义的。")]),t._v(" "),a("h2",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),a("p",[t._v("程序由"),a("em",[t._v("数据")]),t._v("加"),a("em",[t._v("算法")]),t._v("组成。"),a("em",[t._v("数据")]),t._v("是有不同类型的。"),a("br"),t._v("\n数学里的数字，可以做加减乘除的运算，而字符就不能，比如你的名字加上女朋友的名字，该怎么做数学运算。这是两类数据，需要JS解析引擎来区分出来。"),a("br"),t._v("\n在 "),a("strong",[t._v("if...else...")]),t._v(" 的逻辑中，是 "),a("em",[t._v("真")]),t._v(" "),a("em",[t._v("假")]),t._v(" 判断，又是一种数据类型。"),a("br"),t._v("\n根据特性，一门语言也需要多种类型。")]),t._v(" "),a("h3",{attrs:{id:"转化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转化","aria-hidden":"true"}},[t._v("#")]),t._v(" 转化")]),t._v(" "),a("p",[t._v("JS 引擎在代码执行中，会对数据类型做一定的转化。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'37'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 30")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'37'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '377'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// + 操作符的定义比较特殊，不止是加号，也是连接符的意思，在语言规范层面有定义")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean","aria-hidden":"true"}},[t._v("#")]),t._v(" Boolean")]),t._v(" "),a("p",[t._v("不是 "),a("em",[t._v("true")]),t._v(", 就是 "),a("em",[t._v("false")]),t._v("。 在条件判断中，这个状态是必要的。\n\b")]),t._v(" "),a("h3",{attrs:{id:"undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#undefined","aria-hidden":"true"}},[t._v("#")]),t._v(" undefined")]),t._v(" "),a("p",[a("code",[t._v("undefined")]),t._v(" 是声明变量的默认值，没有定义值的意思。作为一种基本类型，本身也是一个值。"),a("br"),t._v("\n语义上，这就是一个声明未定义，待定义的值。难道不应该所有的变量在任何时候不应该都是有值的吗？我理解这和作用域有关，你得在更大的一个范围里声明一个变量，然后再子范围里去使用。试想想，如果没有外部声明这一过程，你在子域里用的时候声明了，然后同级别的子域里要使用的时候怎么传值？必定是现有父域的声明，再有子域之间的相互取值。所以需要这样一个数据类型。")]),t._v(" "),a("p",[t._v("所有的初始值都是 "),a("code",[t._v("''")]),t._v("空字符串可以吗？当然不行，否则如何区分空字符和未定义这样的状态。")]),t._v(" "),a("p",[t._v("在函数没有返回语句 "),a("code",[t._v("return")]),t._v("，或者 "),a("code",[t._v("return")]),t._v(" 后面没有值的时候，返回值也是 "),a("code",[t._v("undefined")]),t._v("。")]),t._v(" "),a("p",[t._v("在全局环境上(window/global)上"),a("code",[t._v("undefined")]),t._v("是个属性（而"),a("code",[t._v("null")]),t._v("不是）其值是"),a("code",[t._v("undefined")]),t._v("。那么平时所用的 "),a("code",[t._v("typeof window.a === undefined")]),t._v(" 到底是内置的 "),a("code",[t._v("undefined")]),t._v(" 还是 "),a("code",[t._v("window.undefined")]),t._v(",作为一个变量使用的 "),a("code",[t._v("undefined")]),t._v("值。")]),t._v(" "),a("h3",{attrs:{id:"null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null","aria-hidden":"true"}},[t._v("#")]),t._v(" null")]),t._v(" "),a("p",[a("code",[t._v("null")]),t._v(" 是空指针，指向不存在的对象或地址。"),a("br"),t._v("\n貌似应该是对象，但是在 JS 中 null 是基本数据类型。 "),a("code",[t._v("typeof null === 'object")]),t._v("返回 "),a("code",[t._v("true")]),t._v(",是有异议的。"),a("br"),t._v("\n空指针和未定义，有区别吗？个人认为，在javascript这样动态语言的实践中，区别不大。可能是因为借鉴其他语言的因素，")]),t._v(" "),a("h3",{attrs:{id:"number"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number","aria-hidden":"true"}},[t._v("#")]),t._v(" Number")]),t._v(" "),a("p",[t._v("JS 采用"),a("a",{attrs:{href:"http://en.wikipedia.org/wiki/Double_precision_floating-point_format",target:"_blank",rel:"noopener noreferrer"}},[t._v("双精度64位浮点型"),a("OutboundLink")],1),t._v("来表示数字。可以有十进制，二进制，八进制，十六进制。最常用的当然是十进制，常用到省略前面的标识头（比如二进制的 "),a("code",[t._v("0bxx")]),t._v("）。")]),t._v(" "),a("p",[t._v("一个变量为什么不能以数字开头？我理解是不好解析，引擎遇到数字开头的编码，不好判断。")]),t._v(" "),a("p",[t._v("这个类型是必须的。要不怎么做数值计算呢。")]),t._v(" "),a("h3",{attrs:{id:"bigint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bigint","aria-hidden":"true"}},[t._v("#")]),t._v(" BigInt")]),t._v(" "),a("p",[t._v("一种任意精度的整数,突破之前 "),a("code",[t._v("Number.MAX_SAFE_INTERGER")]),t._v(" 也就是 2^53 - 1 的限制。这两个类型之间可以做转化。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" biggestInt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("91530941803481092n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hugeString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BigInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'139041309418934938'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bigint'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" previousMaxSafe "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BigInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_SAFE_INTEGER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 9007199254740991n")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" futherMax "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  previousMaxSafe "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 9007199254740992n")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("同样可以使用算数运算符 "),a("code",[t._v("\\")]),t._v(" "),a("code",[t._v("*")]),t._v(" "),a("code",[t._v("+")]),t._v(" "),a("code",[t._v("-")]),t._v(" "),a("code",[t._v("%")]),t._v("，比较运算符 "),a("code",[t._v(">")]),t._v(" "),a("code",[t._v("==")]),t._v(" "),a("code",[t._v("<")]),t._v(" ，以及 条件运算符 "),a("code",[t._v("||")]),t._v(" "),a("code",[t._v("&&")]),t._v(" "),a("code",[t._v("!")]),t._v(",位运算符除了 "),a("code",[t._v(">>>")]),t._v("也都支持。")]),t._v(" "),a("h3",{attrs:{id:"string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string","aria-hidden":"true"}},[t._v("#")]),t._v(" String")]),t._v(" "),a("p",[t._v("在任何语言中，"),a("code",[t._v("string")]),t._v(" 都是都是用一列的字符来表示文本。就是有编码方式的不同。")]),t._v(" "),a("p",[t._v("字符是最通用的一种数据类型。"),a("br"),t._v("\n有一类字符比较特殊，叫 转义字符，以 "),a("code",[t._v("\\")]),t._v("开头，JavaScript 中的转义字符有：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("chararcter")]),t._v(" "),a("th",[t._v("meaning")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("\\0")])]),t._v(" "),a("td",[t._v("Null Byte")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\b")])]),t._v(" "),a("td",[t._v("Backspace")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\f")])]),t._v(" "),a("td",[t._v("Form feed")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\n")])]),t._v(" "),a("td",[t._v("New line")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\r")])]),t._v(" "),a("td",[t._v("Carriage return (回车换行)")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\t")])]),t._v(" "),a("td",[t._v("Tab")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\v")])]),t._v(" "),a("td",[t._v("Vertical tab （垂直 tab? 啥意思）")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\'")])]),t._v(" "),a("td",[t._v("single quote")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v('\\"')])]),t._v(" "),a("td",[t._v("double quote")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\\\")])]),t._v(" "),a("td",[t._v("backslash character")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\XXX")])]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\xXX")])]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\uXXXXX")])]),t._v(" "),a("td",[t._v("The Unicode character specified by four hexadecimal digits XXXX \\n For example, "),a("code",[t._v("\\u00A9")]),t._v(" is the Unicode sequence for the copyright symbol")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\u{XXXX}")])]),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v("特殊字符的一些场景：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" home "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c:\\\\temp'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("磁盘目录包含特殊字符 "),a("code",[t._v("\\")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'this string \\\nis broken \\\nacross multiple \\\nlines.'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("一种多行的表述方式，现在用模板字符串")]),t._v(" "),a("h3",{attrs:{id:"symbol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol","aria-hidden":"true"}},[t._v("#")]),t._v(" Symbol")]),t._v(" "),a("p",[a("code",[t._v("Symbol")]),t._v("创建唯一值的方式，是一个函数，使用方法：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("虽然用来生成"),a("code",[t._v("symbol")]),t._v(",但却不能使用 "),a("code",[t._v("new")]),t._v(" 来构造，只能是函数式调用。有如下一些属性和方法：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("  Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyNames")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//["length", "name", "prototype", "for", "keyFor", "asyncIterator", "hasInstance", "isConcatSpreadable", "iterator", "match", "matchAll", "replace", "search", "species", "split", "toPrimitive", "toStringTag", "unscopables"]')]),t._v("\n  Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyNames")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["constructor", "toString", "valueOf", "description"]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("有一些约定成俗（"),a("code",[t._v("well-known")]),t._v("）的 symbols。")]),t._v(" "),a("p",[t._v("迭代器("),a("code",[t._v("iteration")]),t._v(") symbols ：")]),t._v(" "),a("ul",[a("li",[t._v("Symbol.iterator")]),t._v(" "),a("li",[t._v("Symbol.asyncIterator")])]),t._v(" "),a("p",[t._v("为对象加上这样的原子属性，在使用遍历方法"),a("code",[t._v("for...of...")]),t._v(" "),a("code",[t._v("for await ... of ...")]),t._v(" 场景下调用")]),t._v(" "),a("p",[t._v("一般语句（"),a("code",[t._v("regular expression")]),t._v(" symbols）:")]),t._v(" "),a("ul",[a("li",[t._v("Symbol.match")]),t._v(" "),a("li",[t._v("Symbol.matchAll")]),t._v(" "),a("li",[t._v("Symbol.repalce")]),t._v(" "),a("li",[t._v("Symbol.search")]),t._v(" "),a("li",[t._v("Symbol.split")])]),t._v(" "),a("p",[t._v("加上这样的原子属性，更像是字符串方法的一种劫持行为，可以自定义。")]),t._v(" "),a("p",[t._v("其他（"),a("code",[t._v("others")]),t._v("）symbols:")]),t._v(" "),a("ul",[a("li",[t._v("Symbol.hasInstance")]),t._v(" "),a("li",[t._v("Symbol.usConcatSpreadable")]),t._v(" "),a("li",[t._v("Symbol.unscopables")]),t._v(" "),a("li",[t._v("Symbol.species")]),t._v(" "),a("li",[t._v("Symbol.toPrimitive")]),t._v(" "),a("li",[t._v("Symbol.toStringTag")])]),t._v(" "),a("p",[t._v("有点像一种劫持的调用，"),a("code",[t._v("toPromitive")]),t._v(" 可以改变隐式类型转化时的值，"),a("code",[t._v("toStringTag")]),t._v(" 可以自定义类型。")]),t._v(" "),a("p",[t._v("一些方法：")]),t._v(" "),a("ul",[a("li",[t._v("Symbol.for(key)")]),t._v(" "),a("li",[t._v("Symbol.keyFor(sym)")])]),t._v(" "),a("p",[t._v("可以对定义的 "),a("code",[t._v("Symbol")]),t._v(" 在全局注册的 "),a("code",[t._v("symbols")]),t._v(" 上做一个找回，知道是用哪个"),a("code",[t._v("key")]),t._v("生成的。可以是一种跨模块的调用。这里就引申出一个问题，为了避免 "),a("code",[t._v("key")]),t._v(" 可能造成的冲突，建议用 "),a("code",[t._v("namespace")]),t._v("方式作为 "),a("code",[t._v("key")]),t._v("， 比如 "),a("code",[t._v("foo.bar")]),t._v("。"),a("code",[t._v("well-knowen symbols")]),t._v(" 因为不在全局注册，所以找不回来的，用 "),a("code",[t._v("Symbol.keyFor")]),t._v(" 会返回 "),a("code",[t._v("undefined")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("Symbol")]),t._v("类型，作为一个属性添加到对象上，不会对对象的常规操作造成影响，比如：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// c")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '{}'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("使用时候就像隐藏了一样。使用 "),a("code",[t._v("Object.getOwnPropertySymbols()")]),t._v("方法来获取。")]),t._v(" "),a("p",[t._v("可以是实现新功能的工具，比如 "),a("code",[t._v("for...of...")]),t._v(" "),a("code",[t._v("typeof new Map() === 'map'")])]),t._v(" "),a("p",[t._v("参考：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN 类型和数据结构"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);